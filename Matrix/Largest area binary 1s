class Solution {
    // Function to find the maximum area of rectangle in a histogram.
    static int getMaxArea(int[] arr) {
        int n = arr.length;
        Stack<Integer> s = new Stack<>();
        int res = 0;

        for (int i = 0; i < n; i++) {
            while (!s.isEmpty() && arr[s.peek()] >= arr[i]) {
                int tp = s.pop();
                int width = s.isEmpty() ? i : i - s.peek() - 1;
                res = Math.max(res, arr[tp] * width);
            }
            s.push(i);
        }

        while (!s.isEmpty()) {
            int tp = s.pop();
            int width = s.isEmpty() ? n : n - s.peek() - 1;
            res = Math.max(res, arr[tp] * width);
        }

        return res;
    }

    // Returns area of the largest rectangle with all 1s in mat[][]
    static int maxArea(int mat[][]) {
        int n = mat.length;
        int m = mat[0].length;
        int[] arr = new int[m];
        int ans = 0;

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (mat[i][j] == 1) {
                    arr[j] += 1; // Increase height of histogram
                } else {
                    arr[j] = 0; // Reset height for columns with 0
                }
            }
            ans = Math.max(ans, getMaxArea(arr));
        }

        return ans;
    }
}
