import java.util.ArrayList;
import java.util.List;

class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> current = new ArrayList<>();
        findSubsets(nums, result, current, 0);
        return result;
    }

    private void findSubsets(int[] nums, List<List<Integer>> result, List<Integer> current, int index) {
        // Base case: if we've processed all elements
        if (index == nums.length) {
            result.add(new ArrayList<>(current));
            return;
        }

        // Include the current element
        current.add(nums[index]);
        findSubsets(nums, result, current, index + 1);

        // Exclude the current element (backtrack)
        current.remove(current.size() - 1);
        findSubsets(nums, result, current, index + 1);
    }
}
