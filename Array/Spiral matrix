class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> res = new ArrayList<>();
        int startRow = 0;
        int startCol = 0;
        int endRow = matrix.length - 1;
        int endCol = matrix[0].length - 1;

        while (startRow <= endRow && startCol <= endCol) {
            // Top row
            for (int i = startCol; i <= endCol; i++) {
                res.add(matrix[startRow][i]);
            }

            // Right column
            for (int j = startRow + 1; j <= endRow; j++) {
                res.add(matrix[j][endCol]);
            }

            if (startRow < endRow) {
                // Bottom row
                for (int i = endCol - 1; i >= startCol; i--) {
                    res.add(matrix[endRow][i]);
                }
            }

            if (startCol < endCol) {
                // Left column
                for (int j = endRow - 1; j > startRow; j--) {
                    res.add(matrix[j][startCol]);
                }
            }

            // Move to the inner layer
            startRow++;
            startCol++;
            endRow--;
            endCol--;
        }

        return res;
    }
}
